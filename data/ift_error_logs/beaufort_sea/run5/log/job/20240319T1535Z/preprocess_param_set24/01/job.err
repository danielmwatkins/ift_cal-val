ERROR: LoadError: TaskFailedException

    nested task error: DimensionMismatch: cannot create a BitMatrix from a 1-dimensional iterator
    Stacktrace:
     [1] gen_bitarrayN(T::Type, itsz::Base.HasShape{1}, itr::Vector{Float64})
       @ Base ./bitarray.jl:612
     [2] BitMatrix(itr::Vector{Float64})
       @ Base ./bitarray.jl:578
     [3] macro expansion
       @ /opt/ice-floe-tracker-pipeline/src/preprocess.jl:247 [inlined]
     [4] (::IFTPipeline.var"#335#threadsfor_fun#38"{IFTPipeline.var"#335#threadsfor_fun#36#39"{String, String, Vector{BitMatrix}, Vector{Matrix{RGB{Float64}}}, Vector{Matrix{RGB{Float64}}}, Int64, NamedTuple{(:dilated, :non_dilated), Tuple{BitMatrix, BitMatrix}}, Vector{String}, Vector{String}, Base.OneTo{Int64}}})(tid::Int64; onethread::Bool)
       @ IFTPipeline ./threadingconstructs.jl:206
     [5] #335#threadsfor_fun
       @ ./threadingconstructs.jl:173 [inlined]
     [6] (::Base.Threads.var"#1#2"{IFTPipeline.var"#335#threadsfor_fun#38"{IFTPipeline.var"#335#threadsfor_fun#36#39"{String, String, Vector{BitMatrix}, Vector{Matrix{RGB{Float64}}}, Vector{Matrix{RGB{Float64}}}, Int64, NamedTuple{(:dilated, :non_dilated), Tuple{BitMatrix, BitMatrix}}, Vector{String}, Vector{String}, Base.OneTo{Int64}}}, Int64})()
       @ Base.Threads ./threadingconstructs.jl:145
    
    caused by: MethodError: no method matching sort!(::Vector{Int64}; rev::Bool)
    
    Closest candidates are:
      sort!(!Matched::IceFloeTracker.Tracked) got unsupported keyword argument "rev"
       @ IceFloeTracker /opt/julia/packages/IceFloeTracker/b2B4v/src/tracker/tracker-funcs.jl:106
    
    Stacktrace:
     [1] find_reflectance_peaks(reflectance_channel::SubArray{Float64, 2, Base.ReinterpretArray{Float64, 3, RGB{Float64}, Matrix{RGB{Float64}}, true}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}; possible_ice_threshold::Float64)
       @ IceFloeTracker /opt/julia/packages/IceFloeTracker/b2B4v/src/find_ice_labels.jl:27
     [2] find_reflectance_peaks(reflectance_channel::SubArray{Float64, 2, Base.ReinterpretArray{Float64, 3, RGB{Float64}, Matrix{RGB{Float64}}, true}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false})
       @ IceFloeTracker /opt/julia/packages/IceFloeTracker/b2B4v/src/find_ice_labels.jl:20
     [3] find_ice_labels(reflectance_image::Matrix{RGB{Float64}}, landmask::BitMatrix; band_7_threshold::Float64, band_2_threshold::Float64, band_1_threshold::Float64, band_7_threshold_relaxed::Float64, band_1_threshold_relaxed::Float64, possible_ice_threshold::Float64)
       @ IceFloeTracker /opt/julia/packages/IceFloeTracker/b2B4v/src/find_ice_labels.jl:76
     [4] find_ice_labels
       @ /opt/julia/packages/IceFloeTracker/b2B4v/src/find_ice_labels.jl:46 [inlined]
     [5] preprocess(truecolor_image::Matrix{RGB{Float64}}, falsecolor_image::Matrix{RGB{Float64}}, landmask_imgs::NamedTuple{(:dilated, :non_dilated), Tuple{BitMatrix, BitMatrix}})
       @ IFTPipeline /opt/ice-floe-tracker-pipeline/src/preprocess.jl:149
     [6] macro expansion
       @ /opt/ice-floe-tracker-pipeline/src/preprocess.jl:240 [inlined]
     [7] (::IFTPipeline.var"#335#threadsfor_fun#38"{IFTPipeline.var"#335#threadsfor_fun#36#39"{String, String, Vector{BitMatrix}, Vector{Matrix{RGB{Float64}}}, Vector{Matrix{RGB{Float64}}}, Int64, NamedTuple{(:dilated, :non_dilated), Tuple{BitMatrix, BitMatrix}}, Vector{String}, Vector{String}, Base.OneTo{Int64}}})(tid::Int64; onethread::Bool)
       @ IFTPipeline ./threadingconstructs.jl:206
     [8] #335#threadsfor_fun
       @ ./threadingconstructs.jl:173 [inlined]
     [9] (::Base.Threads.var"#1#2"{IFTPipeline.var"#335#threadsfor_fun#38"{IFTPipeline.var"#335#threadsfor_fun#36#39"{String, String, Vector{BitMatrix}, Vector{Matrix{RGB{Float64}}}, Vector{Matrix{RGB{Float64}}}, Int64, NamedTuple{(:dilated, :non_dilated), Tuple{BitMatrix, BitMatrix}}, Vector{String}, Vector{String}, Base.OneTo{Int64}}}, Int64})()
       @ Base.Threads ./threadingconstructs.jl:145

...and 1 more exception.

Stacktrace:
 [1] threading_run(fun::IFTPipeline.var"#335#threadsfor_fun#38"{IFTPipeline.var"#335#threadsfor_fun#36#39"{String, String, Vector{BitMatrix}, Vector{Matrix{RGB{Float64}}}, Vector{Matrix{RGB{Float64}}}, Int64, NamedTuple{(:dilated, :non_dilated), Tuple{BitMatrix, BitMatrix}}, Vector{String}, Vector{String}, Base.OneTo{Int64}}}, static::Bool)
   @ Base.Threads ./threadingconstructs.jl:163
 [2] macro expansion
   @ ./threadingconstructs.jl:211 [inlined]
 [3] preprocess(; truedir::String, fcdir::String, lmdir::String, passtimesdir::String, output::String)
   @ IFTPipeline /opt/ice-floe-tracker-pipeline/src/preprocess.jl:235
 [4] macro expansion
   @ ./timing.jl:273 [inlined]
 [5] (::var"#6#8"{typeof(preprocess), Dict{Symbol, Any}})()
   @ Main /usr/local/bin/ice-floe-tracker.jl:85
 [6] with_logstate(f::Function, logstate::Any)
   @ Base.CoreLogging ./logging.jl:514
 [7] with_logger(f::Function, logger::TeeLogger{Tuple{EarlyFilteredLogger{FileLogger, var"#3#4"}}})
   @ Base.CoreLogging ./logging.jl:626
 [8] main(args::Vector{String})
   @ Main /usr/local/bin/ice-floe-tracker.jl:84
 [9] top-level scope
   @ /usr/local/bin/ice-floe-tracker.jl:90
in expression starting at /usr/local/bin/ice-floe-tracker.jl:90
2024-03-19T12:28:36-04:00 CRITICAL - failed/ERR
